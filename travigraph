#!/bin/bash
set -e
set -u
set -o pipefail

usage() {
    echo "travigraph -r username/repo -s <start_build> -e <end_build> -o <output_file.png> [-t <tmpdir>] [-w 600 -h 600] [-cached] [-version]"
    exit 1;
}



cached="false"
tmpdir=tmpdir/
width=1000
height=600
outfile=output.png
sbuild=
ebuild=
repo=


while getopts ":c:r:s:e:o:v:t:w:h:" opt; do
  case ${opt} in
    c)
      cached="true"
      ;;
    r)
      repo=${OPTARG}
      ;;
    s)
      sbuild=${OPTARG}
      ;;
    e)
      ebuild=${OPTARG}
      ;;
    o)
      outfile=${OPTARG}
      ;;
    t)
      tmpdir=${OPTARG}/
      ;;
    w)
      width=${OPTARG}
      ;;
    h)
      height=${OPTARG}
      ;;
    v)
      cat VERSION
      exit 0
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2 
      exit 1
      ;;
  esac
done

if [ -z "${sbuild}" ] || [ -z "${ebuild}" ] || [ -z "${repo}" ]; then
    usage
    exit 1
fi

mkdir -p ${tmpdir}

for i in `seq $sbuild 25 $ebuild`; do
    echo Processing build $i;
    [[ -f ${tmpdir}$i.parsed.json ]] || travis raw --json /repos/${repo}/builds?after_number=$i > ${tmpdir}$i.parsed.json;
done;

for i in `seq $sbuild 25 $ebuild`; do
    <${tmpdir}$i.parsed.json jq -r '.builds[]| [.state,.started_at,.finished_at]|@tsv' >> table.csv
done;


echo Plotting graph
Rscript --slave --vanilla plot.R table.csv ${outfile} ${width} ${height}
echo "Done"
